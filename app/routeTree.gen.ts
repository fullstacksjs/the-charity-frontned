/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as GraphiqlImport } from './routes/graphiql'
import { Route as DashboardLayoutImport } from './routes/dashboard/_layout'
import { Route as DashboardLayoutIndexImport } from './routes/dashboard/_layout/index'
import { Route as DashboardLayoutProjectsLayoutImport } from './routes/dashboard/_layout/projects/_layout'
import { Route as DashboardLayoutHouseholdsLayoutImport } from './routes/dashboard/_layout/households/_layout'
import { Route as DashboardLayoutProjectsLayoutIndexImport } from './routes/dashboard/_layout/projects/_layout/index'
import { Route as DashboardLayoutHouseholdsLayoutIndexImport } from './routes/dashboard/_layout/households/_layout/index'
import { Route as DashboardLayoutProjectsLayoutProjectIdImport } from './routes/dashboard/_layout/projects/_layout/$projectId'
import { Route as DashboardLayoutHouseholdsLayoutHouseholdIdImport } from './routes/dashboard/_layout/households/_layout/$householdId'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()
const DashboardLayoutProjectsImport = createFileRoute(
  '/dashboard/_layout/projects',
)()
const DashboardLayoutHouseholdsImport = createFileRoute(
  '/dashboard/_layout/households',
)()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const GraphiqlRoute = GraphiqlImport.update({
  path: '/graphiql',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardLayoutProjectsRoute = DashboardLayoutProjectsImport.update({
  path: '/projects',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutHouseholdsRoute = DashboardLayoutHouseholdsImport.update({
  path: '/households',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutIndexRoute = DashboardLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutProjectsLayoutRoute =
  DashboardLayoutProjectsLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => DashboardLayoutProjectsRoute,
  } as any)

const DashboardLayoutHouseholdsLayoutRoute =
  DashboardLayoutHouseholdsLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => DashboardLayoutHouseholdsRoute,
  } as any)

const DashboardLayoutProjectsLayoutIndexRoute =
  DashboardLayoutProjectsLayoutIndexImport.update({
    path: '/',
    getParentRoute: () => DashboardLayoutProjectsLayoutRoute,
  } as any)

const DashboardLayoutHouseholdsLayoutIndexRoute =
  DashboardLayoutHouseholdsLayoutIndexImport.update({
    path: '/',
    getParentRoute: () => DashboardLayoutHouseholdsLayoutRoute,
  } as any)

const DashboardLayoutProjectsLayoutProjectIdRoute =
  DashboardLayoutProjectsLayoutProjectIdImport.update({
    path: '/$projectId',
    getParentRoute: () => DashboardLayoutProjectsLayoutRoute,
  } as any)

const DashboardLayoutHouseholdsLayoutHouseholdIdRoute =
  DashboardLayoutHouseholdsLayoutHouseholdIdImport.update({
    path: '/$householdId',
    getParentRoute: () => DashboardLayoutHouseholdsLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/graphiql': {
      id: '/graphiql'
      path: '/graphiql'
      fullPath: '/graphiql'
      preLoaderRoute: typeof GraphiqlImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout': {
      id: '/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_layout/': {
      id: '/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardLayoutIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/households': {
      id: '/dashboard/_layout/households'
      path: '/households'
      fullPath: '/dashboard/households'
      preLoaderRoute: typeof DashboardLayoutHouseholdsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/households/_layout': {
      id: '/dashboard/_layout/households/_layout'
      path: '/households'
      fullPath: '/dashboard/households'
      preLoaderRoute: typeof DashboardLayoutHouseholdsLayoutImport
      parentRoute: typeof DashboardLayoutHouseholdsRoute
    }
    '/dashboard/_layout/projects': {
      id: '/dashboard/_layout/projects'
      path: '/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof DashboardLayoutProjectsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/projects/_layout': {
      id: '/dashboard/_layout/projects/_layout'
      path: '/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof DashboardLayoutProjectsLayoutImport
      parentRoute: typeof DashboardLayoutProjectsRoute
    }
    '/dashboard/_layout/households/_layout/$householdId': {
      id: '/dashboard/_layout/households/_layout/$householdId'
      path: '/$householdId'
      fullPath: '/dashboard/households/$householdId'
      preLoaderRoute: typeof DashboardLayoutHouseholdsLayoutHouseholdIdImport
      parentRoute: typeof DashboardLayoutHouseholdsLayoutImport
    }
    '/dashboard/_layout/projects/_layout/$projectId': {
      id: '/dashboard/_layout/projects/_layout/$projectId'
      path: '/$projectId'
      fullPath: '/dashboard/projects/$projectId'
      preLoaderRoute: typeof DashboardLayoutProjectsLayoutProjectIdImport
      parentRoute: typeof DashboardLayoutProjectsLayoutImport
    }
    '/dashboard/_layout/households/_layout/': {
      id: '/dashboard/_layout/households/_layout/'
      path: '/'
      fullPath: '/dashboard/households/'
      preLoaderRoute: typeof DashboardLayoutHouseholdsLayoutIndexImport
      parentRoute: typeof DashboardLayoutHouseholdsLayoutImport
    }
    '/dashboard/_layout/projects/_layout/': {
      id: '/dashboard/_layout/projects/_layout/'
      path: '/'
      fullPath: '/dashboard/projects/'
      preLoaderRoute: typeof DashboardLayoutProjectsLayoutIndexImport
      parentRoute: typeof DashboardLayoutProjectsLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  GraphiqlRoute,
  LoginRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardLayoutRoute: DashboardLayoutRoute.addChildren({
      DashboardLayoutIndexRoute,
      DashboardLayoutHouseholdsRoute:
        DashboardLayoutHouseholdsRoute.addChildren({
          DashboardLayoutHouseholdsLayoutRoute:
            DashboardLayoutHouseholdsLayoutRoute.addChildren({
              DashboardLayoutHouseholdsLayoutHouseholdIdRoute,
              DashboardLayoutHouseholdsLayoutIndexRoute,
            }),
        }),
      DashboardLayoutProjectsRoute: DashboardLayoutProjectsRoute.addChildren({
        DashboardLayoutProjectsLayoutRoute:
          DashboardLayoutProjectsLayoutRoute.addChildren({
            DashboardLayoutProjectsLayoutProjectIdRoute,
            DashboardLayoutProjectsLayoutIndexRoute,
          }),
      }),
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/graphiql",
        "/login",
        "/dashboard"
      ]
    },
    "/graphiql": {
      "filePath": "graphiql.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/",
        "/dashboard/_layout/households",
        "/dashboard/_layout/projects"
      ]
    },
    "/dashboard/_layout/": {
      "filePath": "dashboard/_layout/index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/households": {
      "filePath": "dashboard/_layout/households",
      "parent": "/dashboard/_layout",
      "children": [
        "/dashboard/_layout/households/_layout"
      ]
    },
    "/dashboard/_layout/households/_layout": {
      "filePath": "dashboard/_layout/households/_layout.tsx",
      "parent": "/dashboard/_layout/households",
      "children": [
        "/dashboard/_layout/households/_layout/$householdId",
        "/dashboard/_layout/households/_layout/"
      ]
    },
    "/dashboard/_layout/projects": {
      "filePath": "dashboard/_layout/projects",
      "parent": "/dashboard/_layout",
      "children": [
        "/dashboard/_layout/projects/_layout"
      ]
    },
    "/dashboard/_layout/projects/_layout": {
      "filePath": "dashboard/_layout/projects/_layout.tsx",
      "parent": "/dashboard/_layout/projects",
      "children": [
        "/dashboard/_layout/projects/_layout/$projectId",
        "/dashboard/_layout/projects/_layout/"
      ]
    },
    "/dashboard/_layout/households/_layout/$householdId": {
      "filePath": "dashboard/_layout/households/_layout/$householdId.tsx",
      "parent": "/dashboard/_layout/households/_layout"
    },
    "/dashboard/_layout/projects/_layout/$projectId": {
      "filePath": "dashboard/_layout/projects/_layout/$projectId.tsx",
      "parent": "/dashboard/_layout/projects/_layout"
    },
    "/dashboard/_layout/households/_layout/": {
      "filePath": "dashboard/_layout/households/_layout/index.tsx",
      "parent": "/dashboard/_layout/households/_layout"
    },
    "/dashboard/_layout/projects/_layout/": {
      "filePath": "dashboard/_layout/projects/_layout/index.tsx",
      "parent": "/dashboard/_layout/projects/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
